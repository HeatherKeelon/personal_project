/*! personalproject 2015-12-02 */
var myApp=angular.module("myApp",["ngRoute"]);myApp.controller("GameController",["$scope","$http","$location",function(a,b,c){a.user={},a.team_id,a.username={},a.currentGame=[],a.numberGames=a.currentGame.length,a.setGame=function(a,b){document.cookie=a+"="+b+";",console.log(document.cookie)},a.getTeam=function(){b.post("/games/retrieveteam").then(function(b){a.user=b.data.team_name,a.username=b.data.username})},a.refreshGames=function(){b.get("/games/refreshGames").then(function(b){var c=parseInt(b.data.game_number);if(0==c)console.log("No Games for This Team Yet");else{for(var d=1;c>=d;d++)a.currentGame.push(d);a.numberGames=a.currentGame.length}})},a.addGameToCurrent=function(){b.get("/games/refreshGames").then(function(b){var c=parseInt(b.data.game_number);a.currentGame.push(c),a.numberGames=a.currentGame.length})},a.newGame=function(){a.numberGames=a.currentGame.length+1,b.post("/games/newGame",{params:{numberGames:a.numberGames,team_name:a.user}}).then(function(){a.addGameToCurrent(),a.makeTables()})},a.makeTables=function(){b.post("/games/makeTables",{params:{team_name:a.user,game_number:a.numberGames}}).then(function(){console.log("Tables created")})},a.getTeam(),a.refreshGames()}]),myApp.controller("ActsController",["$scope","$http","TeamAndGame","$location",function(a,b,c,d){a.user,a.cookie,a.teamAndGame=c,a.getCookie=function(b){for(var c=b+"=",d=document.cookie.split(";"),e=0;e<d.length;e++){for(var f=d[e];" "==f.charAt(0);)f=f.substring(1);if(0==f.indexOf(c))return a.cookie=f.substring(c.length,f.length),console.log("Cookie inside getCookie",a.cookie),a.cookie}return""},a.getCookie("game"),console.log("This is game cookie",a.cookie),a.getTeam=function(){void 0==a.teamAndGame.gameData()?(console.log("You are in the if statement"),b.get("/acts/getTeam").then(function(b){console.log("This is response from database",b.data),a.teamAndGame.retrieveData(b.data),a.user=a.teamAndGame.gameData()})):a.user=a.teamAndGame.gameData()},a.getTeam(),console.log("games",a.cookie),console.log("user at end of controller",a.user)}]),myApp.controller("MainCharacterController",["$scope","TeamAndGame","$http","EquipFactory","$timeout","$location",function(a,b,c,d,e,f){a.user,a.character="Syndrael",a.game,a.teamAndGame=b,a.equipFactory=d,a.syndraelstamina,a.syndraelstaminamax=12,a.syndraelfatigue=4,a.syndraelfatiguemax=4,a.syndraelmight=4,a.syndraelknowledge=3,a.syndraelwillpower=2,a.syndraelawareness=2,a.checkboxModel={poison:!1,immobalize:!1,stun:!1,disease:!1},a.syndraelunequip=[],a.bankequip=[],a.syndraelrh="none",a.syndraellh="none",a.syndraelbh="none",a.syndraelaccessory1="none",a.syndraelaccessory2="none",a.requestedUnequip={},a.getCookie=function(b){for(var c=b+"=",d=document.cookie.split(";"),e=0;e<d.length;e++){for(var f=d[e];" "==f.charAt(0);)f=f.substring(1);if(0==f.indexOf(c))return a.game=f.substring(c.length,f.length),a.game}return""},a.getCookie("game"),a.getUser=function(){void 0==a.teamAndGame.gameData()?(console.log("You are in the if statement"),c.get("/acts/getTeam").then(function(b){a.teamAndGame.retrieveData(b.data),a.user=a.teamAndGame.gameData()})):a.user=a.teamAndGame.gameData()},a.getUser(),a.getUnequip=function(){c.get("/main/getUnequip",{params:{team:a.user,game:a.game,character:a.character}}).then(function(b){a.syndraelunequip=b.data,console.log("This is unequip in call",a.syndraelunequip)})},a.getBankequip=function(){c.get("/main/getBankequip",{params:{team:a.user,game:a.game}}).then(function(b){a.bankequip=b.data,console.log("This is bank equip in call",a.bankequip)})},a.syndraelHeroicFeat=function(){alert("Use during your turn to choose a hero within 3 spaces of you. You and that hero may each immediately perform a move action. This is in addition to the 2 actions each hero receives on his turn.")},a.syndraelHeroicAbility=function(){alert("If you have not moved during this turn, you recover 2 stamina at the end of your turn.")},a.syndraelStartingStamina=function(){c.get("/main/startStats",{params:{team:a.user,game:a.game,character:a.character,stat:"stamina"}}).then(function(b){a.syndraelstamina=b.data.stamina})},a.syndraelStartingFatigue=function(){c.get("/main/startStats",{params:{team:a.user,game:a.game,character:a.character,stat:"fatigue"}}).then(function(b){a.syndraelfatigue=b.data.fatigue})},a.staminaPlus=function(){a.syndraelstamina<a.syndraelstaminamax&&(a.syndraelstamina++,c.post("/main/staminafatigue",{params:{team:a.user,game:a.game,character:a.character,stat:a.syndraelstamina,type:"stamina"}}).then(function(){console.log("stamina post")}))},a.staminaMinus=function(){a.syndraelstamina>0&&(a.syndraelstamina--,c.post("/main/staminafatigue",{params:{team:a.user,game:a.game,character:a.character,stat:a.syndraelstamina,type:"stamina"}}).then(function(){console.log("stamina post")}))},a.fatiguePlus=function(){a.syndraelfatigue<a.syndraelfatiguemax&&(a.syndraelfatigue++,c.post("/main/staminafatigue",{params:{team:a.user,game:a.game,character:a.character,stat:a.syndraelfatigue,type:"fatigue"}}).then(function(){console.log("fatigue post")}))},a.fatigueMinus=function(){a.syndraelfatigue>0&&(a.syndraelfatigue--,c.post("/main/staminafatigue",{params:{team:a.user,game:a.game,character:a.character,stat:a.syndraelfatigue,type:"fatigue"}}).then(function(){console.log("fatigue post")}))},a.resetStats=function(){a.syndraelstamina=a.syndraelstaminamax,a.syndraelfatigue=a.syndraelfatiguemax,c.post("/main/resetStats",{params:{team:a.user,game:a.game,character:a.character,stamina:a.syndraelstaminamax,fatigue:a.syndraelfatiguemax}}).then(function(){console.log("stats reset")})},a.selectEquip=function(b){console.log("This is equipname",b.name);for(var c=0;c<a.syndraelunequip.length;c++)console.log("Scope.unequip[i]",a.syndraelunequip),console.log("This is scope.name",a.syndraelunequip[c].name),console.log(a.syndraelunequip[c].description),a.syndraelunequip[c].name==b.name&&(console.log("you are in if statement"),a.requestedUnequip.name=a.syndraelunequip[c].name,a.requestedUnequip.description=a.syndraelunequip[c].description,a.requestedUnequip.gold=a.syndraelunequip[c].cost,a.requestedUnequip.sale_cost=a.syndraelunequip[c].sale_cost,a.requestedUnequip.id=a.syndraelunequip[c].equip_id,1==a.syndraelunequip[c].type?a.requestedUnequip.hand="Single-Handed":2==a.syndraelunequip[c].type?a.requestedUnequip.hand="Two-Handed":a.requestedUnequip.hand=a.syndraelunequip[c].type);a.equipFactory.retrieveData(a.requestedUnequip),console.log("Selected Name",a.equip),console.log("Selected Description",a.description),console.log("Selected Type",a.hand),f.url("/equip")},a.syndraelStartingStamina(),a.syndraelStartingFatigue(),a.getUnequip(),console.log("getUnequip called"),a.getBankequip(),console.log("getBankequip called")}]),myApp.controller("EquipmentController",["$scope","$http","TeamAndGame","EquipFactory","GoldFactory","$location",function(a,b,c,d,e,f){a.teamAndGame=c,a.equipFactory=d,a.goldFactory=e,a.selectedEquip={},a.character="Syndrael",a.game,a.user,a.description,a.hand,a.name,a.gold,a.sell_gold,a.character_gold,a.equipid,a.getCookie=function(b){for(var c=b+"=",d=document.cookie.split(";"),e=0;e<d.length;e++){for(var f=d[e];" "==f.charAt(0);)f=f.substring(1);if(0==f.indexOf(c))return a.game=f.substring(c.length,f.length),a.game}return""},a.getCookie("game"),a.getUser=function(){void 0==a.teamAndGame.gameData()?(console.log("You are in the if statement"),b.get("/acts/getTeam").then(function(b){a.teamAndGame.retrieveData(b.data),a.user=a.teamAndGame.gameData()})):a.user=a.teamAndGame.gameData()},a.getUser(),a.loadEquip=function(){a.selectedEquip=a.equipFactory.gameData(),console.log(a.selectedEquip),a.description=a.selectedEquip.description,a.name=a.selectedEquip.name,a.hand=a.selectedEquip.hand,a.gold=a.selectedEquip.gold,a.sell_gold=a.selectedEquip.sale_cost,a.equipid=a.selectedEquip.id},a.sellEquip=function(b){a.goldFactory.goldData(a.user,a.game,a.character),console.log("This is goldData",a.goldFactory.goldData(a.user,a.game,a.character))},a.loadEquip(),a.goldFactory.goldData(a.user,a.game,a.character)}]),myApp.config(["$routeProvider",function(a){a.when("/login",{templateUrl:"/assets/views/login.html",css:"/assets/styles/login_styles.css"}).when("/failure",{templateUrl:"/assets/views/failure.html"}).when("/usertaken",{templateUrl:"/assets/views/usertaken.html"}).when("/register",{templateUrl:"/assets/views/register.html",css:"/assets/views/register_styles.css"}).when("/games",{templateUrl:"/assets/views/games.html",controler:"GamesController",css:"/assets/styles/games_styles.css"}).when("/acts",{templateUrl:"/assets/views/acts.html",controller:"ActsController",css:"/assets/styles/acts_styles.css"}).when("/main",{templateUrl:"/assets/views/main_syndrael.html",controller:"MainCharacterController",css:"/assets/styles/main_syndrael_styles.css"}).when("/equip",{templateUrl:"/assets/views/equip.html",controller:"EquipmentController",css:"/assets/styles/equip_styles.css"}).otherwise({redirectTo:"login"})}]),myApp.directive("head",["$rootScope","$compile",function(a,b){return{restrict:"E",link:function(c,d){var e='<link rel="stylesheet" ng-repeat="(routeCtrl, cssUrl) in routeStyles" ng-href="{{cssUrl}}" />';d.append(b(e)(c)),c.routeStyles={},a.$on("$routeChangeStart",function(a,b,d){d&&d.$$route&&d.$$route.css&&(angular.isArray(d.$$route.css)||(d.$$route.css=[d.$$route.css]),angular.forEach(d.$$route.css,function(a){delete c.routeStyles[a]})),b&&b.$$route&&b.$$route.css&&(angular.isArray(b.$$route.css)||(b.$$route.css=[b.$$route.css]),angular.forEach(b.$$route.css,function(a){c.routeStyles[a]=a}))})}}}]),myApp.directive("gameProfile",function(){return{controller:"GameController",restrict:"E",scope:{info:"="},templateUrl:"assets/views/templates/gameProfile.html"}});